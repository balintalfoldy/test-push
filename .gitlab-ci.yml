image: python:3.8

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - lint
  - test
  - deploy

# Define the job that runs pylint and enforces a minimum rating
lint:
  stage: lint
  before_script:
    - python -V
    - pip install --upgrade pip
    - python -m venv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
  script:
    - pip install pylint
    - pylint --fail-under=7.0 coffee
  allow_failure: false
  rules:
    # Only run the job for merge request events
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

# Define the job that runs tests
test:
  stage: test
  before_script:
    - python -V
    - pip install --upgrade pip
    - python -m venv venv
    - source venv/bin/activate
    - pip install -r requirements.txt
  script:
    - python -m pytest
  rules:
    # Only run the job for merge request events
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

# Push to Gitlab
push:
  stage: deploy
  image: alpine:latest
  script:
    - apk update && apk add git
    - git config --global user.email "alfibalint@gmail.com"
    - git config --global user.name "Balint Alfoldy"
    - git remote set-url origin https://$GITHUB_USER:$GITHUB_ACCESS_TOKEN@github.com/balintalfoldy/test-push.git
    - git checkout main
    - git push origin main
  environment:
    name: production
  rules:
    # Only run the job for manual triggers on the production branch
    - if: '$CI_PIPELINE_SOURCE == "manual" && $CI_COMMIT_BRANCH == "production"'


# Deploy to Pypi

